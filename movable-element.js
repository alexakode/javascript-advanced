// Opprette et Flyttbart Element
// Hei, JavaScript-entusiaster!

// I denne oppgaven skal vi utforske den praktiske siden av JavaScript ved Ã¥ lage et flyttbart HTML-element. Oppgaven er Ã¥ gjÃ¸re det mulig for elementet Ã¥ bevege seg fritt rundt nettleservinduet. Spesifikasjonene er  som fÃ¸lger:

// Funksjonalitet:
// Navigering med piltaster: Implementer muligheten til Ã¥ flytte elementet i fire retninger â€“ opp, ned, venstre og hÃ¸yre â€“ ved hjelp av piltastene.
// Klikk for Ã¥ posisjonere: Tillat brukeren Ã¥ flytte elementet direkte ved Ã¥ klikke hvor som helst pÃ¥ siden.
// Forbli synlig: SÃ¸rg for at elementet holder seg innenfor den synlige skjermflaten.
// Implementeringstips:
// Bruk addEventListener() for Ã¥ fange opp hendelser fra piltaster og museklikk.
// Bruk position: absolute for Ã¥ gi elementet full bevegelsesfrihet.

// Valgfrie utfordringer:
// Du kan forbedre implementeringen med fÃ¸lgende tillegg:

// Implementer kollisjonsdeteksjon eller legg til hindringer for ekstra kompleksitet.
// Styling:
// Selv om hovedfokuset er pÃ¥ funksjonalitet, kan du style elementet etter eget Ã¸nske. Denne oppgaven gjÃ¸r seg godt i en portfolio sÃ¥ ta deg litt tid og gjÃ¸r siden presentabel.

// Kort oppsumert:
// Sett opp event listeners som fanger opp piltaster og museklikk.
// Implementer logikk for Ã¥ oppdatere elementets posisjon basert pÃ¥ registrerte events.
// Legg eventuelt til ekstra funksjoner eller begrensninger for Ã¥ gjÃ¸re oppgaven mer utfordrende.
// Husk, mÃ¥let med denne Ã¸velsen er Ã¥ styrke din forstÃ¥else av event listeners  og manipulering av HTML-elementer ved hjelp av JavaScript.

// Husk at ryddig og velorganisert kode gjÃ¸r det lettere Ã¥ holde oversikt over alle komponentene! Hvis du trenger Ã¥ bruke en lÃ¸kke, bruk anledningen til Ã¥ Ã¸ve pÃ¥ de avanserte array-metodene vi har gÃ¥tt gjennom.

// Husk ogsÃ¥ Ã¥ aktivere GitHub Pages for innleveringen din.

// Lykke til med kodeeventyret ditt! ðŸŽ‰
const draggableElement = document.getElementById("draggable");
let posX = 0;
let posY = 0;

document.addEventListener("keydown", (event) => {
  switch (event.key) {
    case "ArrowUp":
      posY -= 10;
      break;
    case "ArrowDown":
      posY += 10;
      break;
    case "ArrowLeft":
      posX -= 10;
      break;
    case "ArrowRight":
      posX += 10;
      break;
  }
  updatePosition();
});

document.addEventListener("click", (event) => {
  posX = event.clientX;
  posY = event.clientY;
  updatePosition();
});

function updatePosition() {
  draggableElement.style.transform = `translate(${posX}px, ${posY}px)`;
  // Initial position
  updatePosition();
  // Ensure the element stays within the viewport
  const rect = draggableElement.getBoundingClientRect();
  if (rect.top < 0) posY = 0;
  if (rect.left < 0) posX = 0;
  if (rect.bottom > window.innerHeight) posY = window.innerHeight - rect.height;
  if (rect.right > window.innerWidth) posX = window.innerWidth - rect.width;
}
